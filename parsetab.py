
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEDIVIDE EQUALS FLOAT INT MINUS MULTIPLY NAME PLUS\n    calc : expression\n        | empty\n    \n    empty : \n\n    \n    expression : expression MULTIPLY expression\n                | expression DIVIDE expression \n                | expression PLUS expression\n                | expression MINUS expression\n\n    \n    expression : INT\n              | FLOAT\n\n    '
    
_lr_action_items = {'INT':([0,6,7,8,9,],[4,4,4,4,4,]),'FLOAT':([0,6,7,8,9,],[5,5,5,5,5,]),'$end':([0,1,2,3,4,5,10,11,12,13,],[-3,0,-1,-2,-8,-9,-4,-5,-6,-7,]),'MULTIPLY':([2,4,5,10,11,12,13,],[6,-8,-9,-4,-5,6,6,]),'DIVIDE':([2,4,5,10,11,12,13,],[7,-8,-9,-4,-5,7,7,]),'PLUS':([2,4,5,10,11,12,13,],[8,-8,-9,-4,-5,-6,-7,]),'MINUS':([2,4,5,10,11,12,13,],[9,-8,-9,-4,-5,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calc':([0,],[1,]),'expression':([0,6,7,8,9,],[2,10,11,12,13,]),'empty':([0,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> expression','calc',1,'p_calc','lexer.py',60),
  ('calc -> empty','calc',1,'p_calc','lexer.py',61),
  ('empty -> <empty>','empty',0,'p_empty','lexer.py',69),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','lexer.py',76),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','lexer.py',77),
  ('expression -> expression PLUS expression','expression',3,'p_expression','lexer.py',78),
  ('expression -> expression MINUS expression','expression',3,'p_expression','lexer.py',79),
  ('expression -> INT','expression',1,'p_expression_int_float','lexer.py',88),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','lexer.py',89),
]
